import{u as a,c as t,w as c,_ as p,o as r,a as s,d as o}from"./app-5cf5a87e.js";const i=s("div",{class:"prose m-auto"},[s("p",null,[o("Configurations can be quite complex, and sometimes you may want to utilize the great type checking that TypeScript provided. Change your "),s("code",null,"xxx.config.js"),o(" to "),s("code",null,"xxx.config.ts"),o(" is not an ideal solutions as you will need to have a Node.js register involved to transpile it into JavaScript and some tools might not support doing that way. Fortunately, TypeScript also support type check in plain JavaScript file with JSDoc. Here is an example of Webpack config with type checks:")]),s("pre",null,[s("code",{class:"language-ts"},[s("div",{class:"shiki-container"},[s("pre",{class:"shiki shiki-dark",style:{"background-color":"#121212"}},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{color:"#758575DD"}},"// webpack.config.js")]),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#758575DD"}},"// @ts-check")]),o(`
`),s("span",{class:"line"}),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#758575DD"}},"/**")]),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#758575DD"}}," * "),s("span",{style:{color:"#666666"}},"@"),s("span",{style:{color:"#4D9375"}},"type"),s("span",{style:{color:"#758575DD"}}," "),s("span",{style:{color:"#666666"}},"{"),s("span",{style:{color:"#5DA9A7"}},"import('webpack').Configuration"),s("span",{style:{color:"#666666"}},"}")]),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#758575DD"}}," */")]),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#CB7676"}},"const "),s("span",{style:{color:"#BD976A"}},"config"),s("span",{style:{color:"#CB7676"}}," "),s("span",{style:{color:"#666666"}},"="),s("span",{style:{color:"#CB7676"}}," "),s("span",{style:{color:"#666666"}},"{")]),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#CB7676"}},"  "),s("span",{style:{color:"#758575DD"}},"/* ... */")]),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#666666"}},"}")]),o(`
`),s("span",{class:"line"}),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#B8A965"}},"module"),s("span",{style:{color:"#666666"}},"."),s("span",{style:{color:"#B8A965"}},"exports"),s("span",{style:{color:"#DBD7CAEE"}}," "),s("span",{style:{color:"#666666"}},"="),s("span",{style:{color:"#DBD7CAEE"}}," "),s("span",{style:{color:"#BD976A"}},"config")]),o(`
`),s("span",{class:"line"})])]),s("pre",{class:"shiki shiki-light",style:{"background-color":"#ffffff"}},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{color:"#A0ADA0"}},"// webpack.config.js")]),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A0ADA0"}},"// @ts-check")]),o(`
`),s("span",{class:"line"}),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A0ADA0"}},"/**")]),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A0ADA0"}}," * "),s("span",{style:{color:"#999999"}},"@"),s("span",{style:{color:"#1E754F"}},"type"),s("span",{style:{color:"#A0ADA0"}}," "),s("span",{style:{color:"#999999"}},"{"),s("span",{style:{color:"#2E808F"}},"import('webpack').Configuration"),s("span",{style:{color:"#999999"}},"}")]),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A0ADA0"}}," */")]),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AB5959"}},"const "),s("span",{style:{color:"#B07D48"}},"config"),s("span",{style:{color:"#AB5959"}}," "),s("span",{style:{color:"#999999"}},"="),s("span",{style:{color:"#AB5959"}}," "),s("span",{style:{color:"#999999"}},"{")]),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AB5959"}},"  "),s("span",{style:{color:"#A0ADA0"}},"/* ... */")]),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#999999"}},"}")]),o(`
`),s("span",{class:"line"}),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#998418"}},"module"),s("span",{style:{color:"#999999"}},"."),s("span",{style:{color:"#998418"}},"exports"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#999999"}},"="),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#B07D48"}},"config")]),o(`
`),s("span",{class:"line"})])])])])]),s("p",null,"Prefect. Everything should work and you can already call it a day."),s("p",null,[o("I have never thought about we can do better, until I saw "),s("a",{href:"https://vitejs.dev/config/#config-intellisense",target:"_blank",rel:"noopener"},"Viteâ€™s approach"),o(". In Vite, you can simply have:")]),s("pre",null,[s("code",{class:"language-ts"},[s("div",{class:"shiki-container"},[s("pre",{class:"shiki shiki-dark",style:{"background-color":"#121212"}},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{color:"#758575DD"}},"// vite.config.js")]),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#4D9375"}},"import"),s("span",{style:{color:"#DBD7CAEE"}}," "),s("span",{style:{color:"#666666"}},"{"),s("span",{style:{color:"#DBD7CAEE"}}," "),s("span",{style:{color:"#BD976A"}},"defineConfig"),s("span",{style:{color:"#DBD7CAEE"}}," "),s("span",{style:{color:"#666666"}},"}"),s("span",{style:{color:"#DBD7CAEE"}}," "),s("span",{style:{color:"#4D9375"}},"from"),s("span",{style:{color:"#DBD7CAEE"}}," "),s("span",{style:{color:"#C98A7DAA"}},"'"),s("span",{style:{color:"#C98A7D"}},"vite"),s("span",{style:{color:"#C98A7DAA"}},"'")]),o(`
`),s("span",{class:"line"}),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#4D9375"}},"export"),s("span",{style:{color:"#DBD7CAEE"}}," "),s("span",{style:{color:"#4D9375"}},"default"),s("span",{style:{color:"#DBD7CAEE"}}," "),s("span",{style:{color:"#80A665"}},"defineConfig"),s("span",{style:{color:"#666666"}},"({")]),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#DBD7CAEE"}},"  "),s("span",{style:{color:"#758575DD"}},"/* ... */")]),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#666666"}},"})")]),o(`
`),s("span",{class:"line"})])]),s("pre",{class:"shiki shiki-light",style:{"background-color":"#ffffff"}},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{color:"#A0ADA0"}},"// vite.config.js")]),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#1E754F"}},"import"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#999999"}},"{"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#B07D48"}},"defineConfig"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#999999"}},"}"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#1E754F"}},"from"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#B56959AA"}},"'"),s("span",{style:{color:"#B56959"}},"vite"),s("span",{style:{color:"#B56959AA"}},"'")]),o(`
`),s("span",{class:"line"}),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#1E754F"}},"export"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#1E754F"}},"default"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#59873A"}},"defineConfig"),s("span",{style:{color:"#999999"}},"({")]),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#393A34"}},"  "),s("span",{style:{color:"#A0ADA0"}},"/* ... */")]),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#999999"}},"})")]),o(`
`),s("span",{class:"line"})])])])])]),s("p",null,"No JSDocs, no need to declare a variable first then export it. And since TypeScript will infer the types even you are using plain JavaScript, it works great with both."),s("p",null,[o("How? The "),s("code",null,"defineConfig"),o(" is literally a pass-through, but brings with types:")]),s("pre",null,[s("code",{class:"language-ts"},[s("div",{class:"shiki-container"},[s("pre",{class:"shiki shiki-dark",style:{"background-color":"#121212"}},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{color:"#4D9375"}},"import"),s("span",{style:{color:"#DBD7CAEE"}}," "),s("span",{style:{color:"#4D9375"}},"type"),s("span",{style:{color:"#DBD7CAEE"}}," "),s("span",{style:{color:"#666666"}},"{"),s("span",{style:{color:"#DBD7CAEE"}}," "),s("span",{style:{color:"#BD976A"}},"UserConfig"),s("span",{style:{color:"#DBD7CAEE"}}," "),s("span",{style:{color:"#666666"}},"}"),s("span",{style:{color:"#DBD7CAEE"}}," "),s("span",{style:{color:"#4D9375"}},"from"),s("span",{style:{color:"#DBD7CAEE"}}," "),s("span",{style:{color:"#C98A7DAA"}},"'"),s("span",{style:{color:"#C98A7D"}},"vite"),s("span",{style:{color:"#C98A7DAA"}},"'")]),o(`
`),s("span",{class:"line"}),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#4D9375"}},"export"),s("span",{style:{color:"#DBD7CAEE"}}," "),s("span",{style:{color:"#CB7676"}},"function"),s("span",{style:{color:"#DBD7CAEE"}}," "),s("span",{style:{color:"#80A665"}},"defineConfig"),s("span",{style:{color:"#666666"}},"("),s("span",{style:{color:"#BD976A"}},"options"),s("span",{style:{color:"#666666"}},": "),s("span",{style:{color:"#5DA9A7"}},"UserConfig"),s("span",{style:{color:"#666666"}},")"),s("span",{style:{color:"#DBD7CAEE"}}," "),s("span",{style:{color:"#666666"}},"{")]),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#DBD7CAEE"}},"  "),s("span",{style:{color:"#4D9375"}},"return"),s("span",{style:{color:"#DBD7CAEE"}}," "),s("span",{style:{color:"#BD976A"}},"options")]),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#666666"}},"}")]),o(`
`),s("span",{class:"line"})])]),s("pre",{class:"shiki shiki-light",style:{"background-color":"#ffffff"}},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{color:"#1E754F"}},"import"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#1E754F"}},"type"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#999999"}},"{"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#B07D48"}},"UserConfig"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#999999"}},"}"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#1E754F"}},"from"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#B56959AA"}},"'"),s("span",{style:{color:"#B56959"}},"vite"),s("span",{style:{color:"#B56959AA"}},"'")]),o(`
`),s("span",{class:"line"}),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#1E754F"}},"export"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#AB5959"}},"function"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#59873A"}},"defineConfig"),s("span",{style:{color:"#999999"}},"("),s("span",{style:{color:"#B07D48"}},"options"),s("span",{style:{color:"#999999"}},": "),s("span",{style:{color:"#2E808F"}},"UserConfig"),s("span",{style:{color:"#999999"}},")"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#999999"}},"{")]),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#393A34"}},"  "),s("span",{style:{color:"#1E754F"}},"return"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#B07D48"}},"options")]),o(`
`),s("span",{class:"line"},[s("span",{style:{color:"#999999"}},"}")]),o(`
`),s("span",{class:"line"})])])])])]),s("p",null,[s("code",null,"defineConfig"),o(" exists in the runtime, so it works for JavaScript even if the types get truncated. This is really just some small details of DX, but I would wish more tools could adapt this approach and make the type checking more approachable and simpler.")])],-1),u="Type your Config",d="2021-03-24T16:00:00.000Z",h="en",m="5min",C="https://antfu.me/og/type-your-config.png",E=[{property:"og:title",content:"Type your Config"},{property:"og:image",content:"https://antfu.me/og/type-your-config.png"},{name:"twitter:card",content:"summary_large_image"}],B={__name:"type-your-config",setup(y,{expose:n}){const l={title:"Type your Config",date:"2021-03-24T16:00:00.000Z",lang:"en",duration:"5min",image:"https://antfu.me/og/type-your-config.png",meta:[{property:"og:title",content:"Type your Config"},{property:"og:image",content:"https://antfu.me/og/type-your-config.png"},{name:"twitter:card",content:"summary_large_image"}]};return n({frontmatter:l}),a({title:"Type your Config",meta:[{property:"og:title",content:"Type your Config"},{property:"og:image",content:"https://antfu.me/og/type-your-config.png"},{name:"twitter:card",content:"summary_large_image"}]}),(D,g)=>{const e=p;return r(),t(e,{frontmatter:l},{default:c(()=>[i]),_:1})}}};export{d as date,B as default,m as duration,C as image,h as lang,E as meta,u as title};
